import * as modules from "./modules.js";
/* Класс с гравитацией, от которого надо наследовать объекты, у которых она будет(вешать на класс actionsHero в случае героя). Однако ругается конструктор на this и поэтому 
    вешать надо на сторонний скрипт*/
export default class Gravity{
    constructor(gravobj){
        this.gravObj = gravobj; // Ссылка на объект с гравитацией
        this.kg = 1; // Небольшое ускорение при падении, чтобы не мозолить глаза. Физика падения не соответствует реальности, но, пока это незаменто, всё хорошо.
    }
    grav(activity = -1){ // Функция отвечающая за гравитацию объекта
        // У объектов с гравитацией должен быть параметр coordinate, который является словарём с координатами объекта
        /* 
            Передаём в функцию doesOnVoid 2 параметра:
                1: х-координата тайла, в котором находится объектом (важно учитывать длину спрайта и смещение относттельно камеры, 
                    а также получить эту координату в тайлах и округлить в !меньшую сторону)
                2: у-координата тайла, который находится под объектом (тоже нужно перевести в тайлы)
        */
        if(modules.mapCol.doesOnVoid(Math.floor((this.gravObj.coordinate.x + this.gravObj.width - modules.backrg.x) / 10), (this.gravObj.coordinate.y + 10) / 10)){
            this.gravObj.coordinate.y += 10 * (this.kg >= 5 ? 1.5: 1); // Для шустроты, двигаются объекты 1 тайл за фрейм и умножаем на ускорение
            this.kg++;
            
        }else if(activity !== -1 && activity.jumpPress){ // Если у объекта есть активити и он в прыжке (случай прописан для персонажа)
            this.kg = 1;
            activity.upperPoint = false; // Делаем флаги верхней точки и прыжка ложными
            activity.jumpPress = false;
        }
    }
}